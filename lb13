using System;
using System.Collections.Generic;
namespace lb13
{
    public class Point
    {
        public int X { get; }
        public int Y { get; }

        public Point(int x, int y)
        {
            X = x;
            Y = y;
        }
    }

    public class Figure
    {
        //private
        public List<Point> points = new List<Point>();
        public string Name { get; }

        public Figure(params Point[] figurePoints)
        {
            if (figurePoints.Length < 3 || figurePoints.Length > 5)
            {
                throw new ArgumentException("Неверное количество точек для создания фигуры. Допустимо от 3 до 5 точек.");
            }

            foreach (Point point in figurePoints)
            {
                points.Add(point);
            }

            // Определите название фигуры на основе количества переданных точек
            switch (points.Count)
            {
                case 3:
                    Name = "Треугольник";
                    break;
                case 4:
                    Name = "Четырехугольник";
                    break;
                case 5:
                    Name = "Пятиугольник";
                    break;
                default:
                    throw new ArgumentException("Неверное количество точек для создания фигуры.");
            }
        }

        public Figure(System.Drawing.Point[] points1)
        {
        }

        public double LengthSide(Point A, Point B)
        {
            // Рассчитываем длину стороны по теореме Пифагора
            int deltaX = A.X - B.X;
            int deltaY = A.Y - B.Y;
            return Math.Sqrt(deltaX * deltaX + deltaY * deltaY);
        }

        public double PerimeterCalculator()
        {
            double perimeter = 0.0;

            for (int i = 0; i < points.Count - 1; i++)
            {
                perimeter += LengthSide(points[i], points[i + 1]);
            }

            // Закрыть фигуру, если у нас есть начальная и конечная точки
            perimeter += LengthSide(points[0], points[points.Count - 1]);

            Console.WriteLine($"Название фигуры: {Name}");
            Console.WriteLine($"Периметр фигуры: {perimeter}");

            return perimeter; // Возвращаем вычисленный периметр
        }

    }

    class Program
    {
        static void Main(string[] args)
        {
            Console.Write("Введите количество точек (от 3 до 5): ");
            int numberOfPoints = int.Parse(Console.ReadLine());

            if (numberOfPoints < 3 || numberOfPoints > 5)
            {
                Console.WriteLine("Неверное количество точек. Допустимо от 3 до 5.");
                return;
            }

            List<Point> inputPoints = new List<Point>();

            for (int i = 0; i < numberOfPoints; i++)
            {
                Console.Write($"Координаты точки {i + 1} (x y): ");
                string[] coordinates = Console.ReadLine().Split();
                int x = int.Parse(coordinates[0]);
                int y = int.Parse(coordinates[1]);
                inputPoints.Add(new Point(x, y));
            }

            // Создание фигуры с переданными точками
            Figure figure = new Figure(inputPoints.ToArray());
            figure.PerimeterCalculator();


        }
    }
}
